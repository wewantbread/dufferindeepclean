/* Google Font */
@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Inter:wght@400;700&display=swap');

/* Global Reset */
* { margin: 0; padding: 0; box-sizing: border-box; animation-fill-mode: both; }

/* Links */
a { text-decoration: none !important; }
a:hover { text-decoration: none !important; }
a:visited { color: #00d4ff; text-decoration: none !important; }
a:link { text-decoration: none !important; }

/* =========================
   GLOBAL BACKGROUND (SEAMLESS, INFINITE, DIAGONAL)
   ========================= */
:root{
  /* ðŸ‘‰ point to your seamless cleaning-supplies tile */
  --bg-tile: url('cleaning-pattern.png');  /* e.g. /assets/bg/cleaning-pattern-wide.png */

  /* ðŸ‘‰ set to the tile PNGâ€™s native pixel size (not scaled) */
  --tile-w: 1024px;   /* CHANGE if your tile is different */
  --tile-h: 512px;    /* CHANGE if your tile is different */

  /* icon size control (1.00 = native). Use 0.9â€“1.1 */
  --tile-scale: 0.95;

  /* derived */
  --tile-w-size: calc(var(--tile-w) * var(--tile-scale));
  --tile-h-size: calc(var(--tile-h) * var(--tile-scale));
}

html, body { height: -webkit-fill-available; min-height: 100%; }
html { background: #000; }

/* keep body transparent so the animated layers show through */
body {
  font-family: 'Inter', sans-serif;
  color: white;
  min-height: 100vh;
  background: transparent !important;   /* remove any static bg/cover */
}

/* Animated tiling pattern (behind content) */
body::after{
  content: "";
  position: fixed;
  inset: 0;
  z-index: 0;                 /* content sits above this */
  pointer-events: none;

  /* two repeated layers for depth */
  background-image: var(--bg-tile), var(--bg-tile);
  background-repeat: repeat, repeat;
  background-size: var(--tile-w-size) var(--tile-h-size), var(--tile-w-size) var(--tile-h-size);
  background-position: 0 0, calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2);

  /* move exactly one tile â†’ perfect seamless loop */
  animation: bgA 38s linear infinite, bgB 62s linear infinite;
}

/* Readability overlay (on top of the animation, under content) */
body::before{
  content: "";
  position: fixed;
  inset: 0;
  z-index: 1;
  pointer-events: none;
  background: radial-gradient(1200px 600px at 50% -10%,
              rgba(0,0,0,0.45), rgba(0,0,0,0.7) 60%, rgba(0,0,0,0.85));
}

/* diagonal seamless loops */
@keyframes bgA {
  from { background-position: 0 0, calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2); }
  to   { background-position: var(--tile-w-size) var(--tile-h-size),
                          calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2); }
}
@keyframes bgB {
  from { background-position: 0 0, calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2); }
  to   { background-position: 0 0,
                          calc(var(--tile-w-size)*1.5) calc(var(--tile-h-size)*1.5); }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce){
  body::after{ animation: none; }
}

/* Ensure the hero left panel never reinstates the old grid */
#home.split-screen .text-side,
.split-screen .text-side {
  background: transparent !important;
  background-image: none !important;
  animation: none !important;
}

/* =========================
   TYPOGRAPHY
   ========================= */
h1, h2, h3 {
  font-family: 'Bebas Neue', sans-serif;
  letter-spacing: 1px;
  text-transform: lowercase;
}

/* =========================
   NAVBAR
   ========================= */
.navbar {
  display: flex; justify-content: space-between; align-items: center;
  padding: 1.5em 3em;
  background: linear-gradient(to right, #000, #111);
  position: sticky; top: 0; z-index: 1000;
}

/* Logo with soap + sparkle */
.logo { display: flex; align-items: center; font-size: 2rem; font-weight: bold; color: #00d4ff;
  animation: fadeInUp 0.4s ease forwards; transform: translateY(-10px); opacity: 0; animation-delay: 0.2s; position: relative; }
.logo .soap { font-size: 2.5rem; margin-right: .5rem; transform: scale(1.1); opacity: 1;
  animation: popIn 1.2s ease; animation-delay: .2s; animation-fill-mode: backwards; position: relative; }
.logo .soap::after { content: 'âœ¨'; position: absolute; font-size: .9rem; top: -10px; right: -8px;
  animation: sparkle 1.2s ease-in-out infinite; color: #fff; opacity: .8; }
.logo-text { font-size: 1.8rem; text-transform: lowercase; letter-spacing: 1px;
  animation: fadeInUp 0.1s ease forwards; opacity: 0; animation-delay: .3s; }

@keyframes popIn { 0%{transform:scale(.5) rotate(-30deg);opacity:0} 60%{transform:scale(1.3) rotate(10deg);opacity:1} 100%{transform:scale(1.1)} }
@keyframes fadeInUp { from{opacity:0;transform:translateY(10px)} to{opacity:1;transform:translateY(0)} }
@keyframes sparkle { 0%,100%{opacity:.8;transform:scale(1) rotate(0)} 50%{opacity:1;transform:scale(1.2) rotate(20deg)} }

/* Nav links */
.nav-links a { margin-left: 2rem; color: #eee; font-size: 1rem; transition: color .3s ease; }
.nav-links a:hover { color: #00d4ff; }

/* =========================
   HERO SPLIT
   ========================= */
.split-screen { display: flex; height: 90vh; width: 100%; position: relative; z-index: 2; }
.text-side {
  flex: 1; display: flex; flex-direction: column; justify-content: center; padding: 4em;
  /* (grid removed above) */
}
.image-side { flex: 1; overflow: hidden; display: flex; justify-content: flex-start; align-items: center; position: relative; z-index: 1; }
.image-side::after { content: ""; position: absolute; left: 0; top: 0; height: 100%; width: 120px;
  background: linear-gradient(to right, black, transparent); z-index: 2; pointer-events: none; }
.image-side img { width: 100%; height: 100%; object-fit: cover; position: relative; z-index: 0; transform: translateX(-40px); }

/* Headline */
.headline { font-size: 3rem; font-weight: 800; line-height: 1.2; }
.headline span { display: inline-block; animation: fadeIn 1s ease forwards; opacity: 0; }
.headline span:nth-child(1){animation-delay:.3s}
.headline span:nth-child(2){animation-delay:.6s}
.headline span:nth-child(3){animation-delay:.9s}
.headline span:nth-child(4){animation-delay:1.2s}
.headline-image { height: 1em; width: auto; display: inline-block; margin-left: .5rem; vertical-align: baseline;
  animation: fadeIn 1s ease forwards; opacity: 0; animation-delay: 1.5s; }
@keyframes fadeIn { to { opacity: 1; transform: translateY(0); } }

/* Subtext & CTAs */
.subtext { font-size: 1.1rem; margin-top: 2rem; color: #ccc; max-width: 500px; }
.quote-btn-home {
  margin-top: 3rem; padding: .8em 2em; background: #00d4ff; color: #000 !important; font-weight: bold;
  border: none; border-radius: 14px; font-size: 1.5rem; cursor: pointer; align-self: flex-start;
  animation: fadeInUp 1.5s ease forwards; opacity: 0; transform: translateY(20px);
  transition: background .3s ease, transform .3s ease;
}
.quote-btn-home:hover { background: white; color: black !important; }
.quote-btn-home:visited, .quote-btn-home:link { color: black !important; }

.services-btn-home {
  margin-top: 1.5rem; padding: .8em 2em; background: transparent; color: #00d4ff; font-weight: bold;
  border: 2px solid #00d4ff; border-radius: 50px; font-size: 1.2rem; align-self: flex-start;
  animation: fadeInUp 1.8s ease forwards; opacity: 0; transform: translateY(20px);
  transition: all .3s ease; text-transform: lowercase;
}
.services-btn-home:hover { background:#00d4ff; color:#000; transform: translateY(-2px); box-shadow: 0 8px 20px rgba(0,212,255,.3); }

/* =========================
   SERVICES
   ========================= */
.services-page { min-height: 100vh; padding: 2em 0; position: relative; z-index: 2; }
.services-header { text-align: center; padding: 3em 2em 1em; }
.services-header h1 { font-size: 3.5rem; color: #00d4ff; margin-bottom: 1rem; animation: fadeInUp .8s ease forwards; }
.services-header p { font-size: 1.2rem; color: #ccc; max-width: 600px; margin: 0 auto;
  animation: fadeInUp 1s ease forwards; animation-delay: .2s; opacity: 0; }

.services-grid {
  display: grid; grid-template-columns: repeat(3, 1fr); gap: 2rem;
  padding: 2em 2em; max-width: 1000px; margin: 0 auto;
}
.service-card {
  background: rgba(255,255,255,.05); border-radius: 20px; padding: 1.5rem; text-align: center;
  transition: all .4s ease; border: 2px solid transparent; position: relative; overflow: hidden;
  animation: fadeInUp 1s ease forwards; opacity: 0;
}
.service-card:nth-child(1){animation-delay:.3s}
.service-card:nth-child(2){animation-delay:.5s}
.service-card:nth-child(3){animation-delay:.7s}
.service-card::before{
  content:''; position:absolute; top:0; left:-100%; width:100%; height:100%;
  background: linear-gradient(90deg, transparent, rgba(0,212,255,.1), transparent);
  transition:left .5s ease;
}
.service-card:hover::before { left:100%; }
.service-card:hover { transform: translateY(-10px); border-color:#00d4ff; box-shadow:0 20px 40px rgba(0,212,255,.2); background: rgba(0,212,255,.1); }
.service-image { width:180px; height:180px; object-fit:cover; margin-bottom:1rem; border-radius:15px; transition: transform .3s ease; }
.service-card:hover .service-image { transform: scale(1.05); }
.service-card h3 { font-size: 2rem; color:#00d4ff; margin-bottom:1rem; transition: color .3s ease; }
.service-card:hover h3 { color:#fff; }
.service-card p { color:#ccc; line-height:1.6; font-size:1rem; transition: color .3s ease; }
.service-card:hover p { color:#fff; }

/* Quote section (unchanged) */
.quote-form-section { padding: 4em 2em; background: linear-gradient(to bottom, #000, #333); color:#fff; text-align:center; }
.quote-form-section h1 { font-size: 2.5rem; margin-bottom: 2rem; color:#00d4ff; }
.quote-form { max-width: 600px; margin: 0 auto; text-align: left; }
.quote-form label { display:block; margin-top:1.5rem; font-weight:bold; }
.quote-form input, .quote-form textarea, .quote-form select {
  width:100%; padding:.8em; margin-top:.5rem; border:none; border-radius:6px; background:#222; color:#fff;
}
.quote-form button { margin-top:2rem; padding:.8em 2em; background:#00d4ff; color:#000; font-weight:bold; border:none; border-radius:8px; cursor:pointer; transition: background .3s ease; }
.quote-form button:hover { background:#fff; }

/* Announcement (static) */
.announcement { width:100%; background:#000; border-bottom:1px solid rgba(255,255,255,.1);
  padding:.9rem 1.25rem; display:flex; justify-content:center; align-items:center; z-index: 999; position: relative; }
.announcement-inner { width:100%; max-width:1200px; display:grid; grid-template-columns:1fr auto; gap:1rem 1.5rem; align-items:center; }
.announce-line { color:#f2f2f2; font-size:1rem; line-height:1.35; opacity:.95; margin:0; }
.announcement-cta { justify-self:end; display:inline-block; padding:.55em 1.2em; font-weight:800; font-size:.98rem; line-height:1;
  border-radius:12px; background:#00d4ff; color:#000 !important; border:2px solid transparent; transition: background .2s ease, transform .2s ease; }
.announcement-cta:hover { background:#fff; transform: translateY(-1px); }
@media (max-width: 768px){
  .announcement-inner { grid-template-columns:1fr; }
  .announcement-cta { justify-self:start; }
}

/* iOS-only tweaks */
html.ios .announcement { background:#f6f7f8; border-bottom:1px solid rgba(0,0,0,.1); }
html.ios .announce-line { color:#000 !important; }
html.ios .announcement-cta { background:#00ff88 !important; color:#000 !important; }
html.ios .announcement-cta:hover { background:#00cc6d !important; }

html.ios .split-screen { flex-direction: column; height: auto; }
html.ios .image-side { display: none !important; }
html.ios .text-side {
  background: url('cleanuptransformation.jpg') center center / cover no-repeat;
  min-height: 100svh; padding: 4em 1.5em calc(1.5em + env(safe-area-inset-bottom));
  display:flex; flex-direction:column; justify-content:center; align-items:flex-start;
  border-radius:20px; overflow:hidden; position:relative;
}
html.ios .text-side::before {
  content:""; position:absolute; inset:0 0 auto 0; height:35%;
  background: linear-gradient(to bottom, rgba(255,255,255,.9), rgba(255,255,255,0));
  z-index:1; pointer-events:none;
}
html.ios .headline { font-size:3rem; line-height:1.15; font-weight:900; color:#000; position:relative; z-index:2; }
html.ios .subtext { font-size:1.3rem; font-weight:700; color:#000; max-width:30ch; position:relative; z-index:2; }
html.ios .headline, html.ios .subtext { text-shadow: 0 2px 4px rgba(255,255,255,.65); }
html.ios .quote-btn-home, html.ios .services-btn-home {
  background:#00ff88 !important; color:#000 !important; border:none; border-radius:14px; font-weight:800;
  font-size:1.5rem; padding:.8em 2em; text-transform:lowercase; transition: background .3s ease, transform .3s ease; position:relative; z-index:2;
}
html.ios .quote-btn-home:hover, html.ios .services-btn-home:hover { background:#00cc6d !important; transform: translateY(-2px); }
html.ios .navbar { z-index: 1003; }

/* Responsive */
@media (max-width: 768px){
  .split-screen { flex-direction: column; height: auto; }
  .text-side, .image-side { flex: none; }
  .headline { font-size: 2.5rem; }
  .services-grid { grid-template-columns: 1fr; padding: 2em 1em; }
  .service-image { width: 150px; height: 150px; }
  .navbar { padding: 1em 2em; }
  .logo { font-size: 1.5rem; }
}

/* Orbital (unused but retained) */
.orbital-grid { position: relative; overflow: hidden; background-color: black; }
.orbital-grid::before {
  content: ""; position: absolute; top: -50%; left: -50%; width: 200%; height: 200%;
  background: repeating-radial-gradient(circle, rgba(255,165,0,.2) 0px, rgba(0,212,255,.2) 1px, transparent 2px, transparent 20px);
  animation: rotateGrid 60s linear infinite; z-index: 0; pointer-events: none;
}
@keyframes rotateGrid { 0% { transform: rotate(0deg);} 100% { transform: rotate(360deg);} }
#services-grid { scroll-margin-top: 80px; }
/* ===== FINAL: Seamless diagonal infinite background + safe stacking ===== */
:root{
  /* ðŸ‘‰ point to your seamless cleaning-supplies tile */
  --bg-tile: url('cleaning-pattern.png');   /* e.g. /assets/bg/cleaning-pattern-wide.png */

  /* ðŸ‘‰ set to the tile PNGâ€™s native pixel size (exact) */
  --tile-w: 1024px;   /* CHANGE if your tile differs */
  --tile-h: 512px;    /* CHANGE if your tile differs */

  /* icon size (1.00 = native). Try 0.9â€“1.1 */
  --tile-scale: 0.95;

  /* derived sizes */
  --tile-w-size: calc(var(--tile-w) * var(--tile-scale));
  --tile-h-size: calc(var(--tile-h) * var(--tile-scale));
}

/* keep the page black behind everything */
html { background:#000; }

/* content will sit above the animated layer */
body { background: transparent !important; }

/* One pseudo-element = overlay + two tiled layers (in that order) */
body::after{
  content:"";
  position: fixed;
  inset: 0;
  z-index: 0;            /* base layer; content is forced above below */
  pointer-events: none;

  /* [0]=overlay, [1]=tile A, [2]=tile B */
  background-image:
    radial-gradient(1200px 600px at 50% -10%, rgba(0,0,0,.45), rgba(0,0,0,.75) 60%, rgba(0,0,0,.85)),
    var(--bg-tile),
    var(--bg-tile);

  background-repeat:
    no-repeat,
    repeat,
    repeat;

  background-size:
    cover,
    var(--tile-w-size) var(--tile-h-size),
    var(--tile-w-size) var(--tile-h-size);

  background-position:
    center,
    0 0,
    calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2);

  /* move exactly one tile â†’ perfect seamless loop */
  animation: bgA 38s linear infinite, bgB 62s linear infinite;
}

/* Put ALL main sections above the animated layer */
.navbar,
.announcement,
.split-screen,
.services-page,
footer {
  position: relative;
  z-index: 2;   /* safely above body::after */
}

/* Ensure hero left panel never reintroduces the old grid */
#home.split-screen .text-side,
.split-screen .text-side {
  background: transparent !important;
  background-image: none !important;
  animation: none !important;
}

/* Seamless diagonal loops */
@keyframes bgA {
  from {
    background-position: center, 0 0,
      calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2);
  }
  to {
    background-position: center, var(--tile-w-size) var(--tile-h-size),
      calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2);
  }
}
@keyframes bgB {
  from {
    background-position: center, 0 0,
      calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2);
  }
  to {
    background-position: center, 0 0,
      calc(var(--tile-w-size)*1.5) calc(var(--tile-h-size)*1.5);
  }
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce){
  body::after { animation: none; }
}
/* === SITEWIDE: seamless diagonal background (1536Ã—1024 tile) === */
:root{
  --bg-tile: url('backgroundbook.png');  /* your file */
  --tile-w: 1536px;                      /* native tile size */
  --tile-h: 1024px;
  --tile-scale: 0.90;                    /* make icons slightly smaller (0.85â€“0.95) */

  --tile-w-size: calc(var(--tile-w) * var(--tile-scale));
  --tile-h-size: calc(var(--tile-h) * var(--tile-scale));

  /* overlay strength (tune 0.55â€“0.75) */
  --overlay-a: rgba(0,0,0,0.50);
  --overlay-b: rgba(0,0,0,0.78);
  --overlay-c: rgba(0,0,0,0.88);
}

html { background:#000; }
body { background: transparent !important; }

/* Animated tile (under content) */
body::after{
  content:"";
  position: fixed;
  inset: 0;
  z-index: 0;                  /* stays under your content */
  pointer-events: none;

  background-image: var(--bg-tile), var(--bg-tile);
  background-repeat: repeat, repeat;
  background-size: var(--tile-w-size) var(--tile-h-size), var(--tile-w-size) var(--tile-h-size);
  background-position: 0 0, calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2);

  /* move EXACTLY one tile -> perfect loop */
  animation: bgA 46s linear infinite, bgB 78s linear infinite;
}

/* Readability overlay (also under content) */
body::before{
  content:"";
  position: fixed;
  inset: 0;
  z-index: 0;                  /* merged below, weâ€™ll lift content above */
  pointer-events: none;
  background: radial-gradient(1200px 600px at 50% -10%,
              var(--overlay-a), var(--overlay-b) 60%, var(--overlay-c));
}

/* Force core sections above both ::before/::after */
main, .navbar, .announcement, .split-screen, .services-page, footer, section {
  position: relative;
  z-index: 2;
}

/* Old grid never returns on hero-left */
#home.split-screen .text-side,
.split-screen .text-side {
  background: transparent !important;
  background-image: none !important;
  animation: none !important;
}

/* Seamless loops */
@keyframes bgA {
  from { background-position: 0 0, calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2); }
  to   { background-position: var(--tile-w-size) var(--tile-h-size),
                           calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2); }
}
@keyframes bgB {
  from { background-position: 0 0, calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2); }
  to   { background-position: 0 0,
                           calc(var(--tile-w-size)*1.5) calc(var(--tile-h-size)*1.5); }
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce){ body::after{ animation:none; } }
/* Desktop: make service cards larger and denser */
@media (min-width: 980px){
  .services-page { padding: 3em 0 4.5em; }
  .services-grid {
    max-width: 1280px;
    gap: 28px;
    padding: 2em 2em;
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .service-card { padding: 24px; border-radius: 22px; }
  .service-image { width: 220px; height: 220px; }
  .service-card h3 { font-size: 2.2rem; }
  .services-header h1 { font-size: 4rem; }
}
/* iOS: keep the announcement bar dark to match desktop */
html.ios .announcement { background:#000 !important; border-bottom:1px solid rgba(255,255,255,0.1) !important; }
html.ios .announce-line { color:#f2f2f2 !important; }
html.ios .announcement-cta { background:#00d4ff !important; color:#000 !important; }
.announcement { padding: calc(0.9rem + env(safe-area-inset-top)) 1.25rem 0.9rem; }
/* Neutralize any page-level background/overlay left in inline styles */
body { background: transparent !important; }
/* === SITEWIDE: seamless diagonal background (animated icons) === */
:root{
  /* Use the SEAMLESS tile file (not backgroundbook.png) */
  --bg-tile: url('backgroundbook.png');

  /* Set to the tile image's native pixel size */
  --tile-w: 1024px;   /* <- change if your tile is a different size */
  --tile-h: 512px;

  /* Make icons a tiny bit smaller */
  --tile-scale: 0.88;  /* tweak 0.84â€“0.92 to taste */

  /* Derived sizes */
  --tile-w-size: calc(var(--tile-w) * var(--tile-scale));
  --tile-h-size: calc(var(--tile-h) * var(--tile-scale));
}

html { background:#000; }
body { background: transparent !important; }

/* Animated tiling (under content) */
body::after{
  content:"";
  position: fixed;
  inset: 0;
  z-index: 0;                 /* content sits above */
  pointer-events: none;

  background-image: var(--bg-tile), var(--bg-tile);
  background-repeat: repeat, repeat;
  background-size: var(--tile-w-size) var(--tile-h-size), var(--tile-w-size) var(--tile-h-size);
  background-position: 0 0, calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2);

  /* Move EXACTLY one tile -> perfect seamless loop */
  animation: bgA 46s linear infinite, bgB 78s linear infinite;
}

/* Single readability overlay, under content */
body::before{
  content:"";
  position: fixed;
  inset: 0;
  z-index: 0;  /* keep with ::after; content is lifted above below */
  pointer-events: none;
  background: radial-gradient(1200px 600px at 50% -10%,
              rgba(0,0,0,.50), rgba(0,0,0,.78) 60%, rgba(0,0,0,.88));
}

/* Lift core sections above background layers */
.navbar, .announcement, .split-screen, .services-page, section, footer, main {
  position: relative; z-index: 2;
}

/* Kill any leftover grid on hero left */
#home.split-screen .text-side,
.split-screen .text-side { background: transparent !important; background-image: none !important; animation: none !important; }

/* Seamless diagonal loops */
@keyframes bgA {
  from { background-position: 0 0, calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2); }
  to   { background-position: var(--tile-w-size) var(--tile-h-size), calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2); }
}
@keyframes bgB {
  from { background-position: 0 0, calc(var(--tile-w-size)/2) calc(var(--tile-h-size)/2); }
  to   { background-position: 0 0, calc(var(--tile-w-size)*1.5) calc(var(--tile-h-size)*1.5); }
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce){ body::after{ animation:none; } }
